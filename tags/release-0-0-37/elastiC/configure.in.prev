dnl ==========================================================================
dnl configure.in
dnl ==========================================================================
dnl configure script for elastiC.
dnl --------------------------------------------------------------------------
dnl   AUTHOR:  Marco Pantaleoni         E-mail: panta@elasticworld.org
dnl
dnl   Created: 1999
dnl
dnl   $Id$
dnl --------------------------------------------------------------------------
dnl    Copyright (C) 1999-2001 Marco Pantaleoni. All rights reserved.
dnl
dnl  The contents of this file are subject to the elastiC License version 1.0
dnl  (the "elastiC License"); you may not use this file except in compliance
dnl  with the elastiC License. You may obtain a copy of the elastiC License at
dnl  http://www.elasticworld.org/LICENSE
dnl
dnl  IN NO EVENT SHALL THE AUTHOR OR DISTRIBUTORS BE LIABLE TO ANY PARTY
dnl  FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
dnl  ARISING OUT OF THE USE OF THIS SOFTWARE, ITS DOCUMENTATION, OR ANY
dnl  DERIVATIVES THEREOF, EVEN IF THE AUTHOR HAS BEEN ADVISED OF THE
dnl  POSSIBILITY OF SUCH DAMAGE.
dnl
dnl  THE AUTHOR AND DISTRIBUTORS SPECIFICALLY DISCLAIM ANY WARRANTIES,
dnl  INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY,
dnl  FITNESS FOR A PARTICULAR PURPOSE, AND NON-INFRINGEMENT.  THIS SOFTWARE
dnl  IS PROVIDED ON AN "AS IS" BASIS, AND THE AUTHOR AND DISTRIBUTORS HAVE
dnl  NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR
dnl  MODIFICATIONS.
dnl
dnl  See the elastiC License for the specific language governing rights and
dnl  limitations under the elastiC License.
dnl ==========================================================================

dnl Process this file with autoconf to produce a configure script.

AC_INIT(src/elastic.c)

dnl ========================================================================
dnl V E R S I O N I N G
dnl ------------------------------------------------------------------------
dnl For versioning we follow the same scheme as gtk.
dnl When making a release:
dnl   EC_MICRO_VERSION += 1
dnl   EC_INTERFACE_AGE += 1
dnl   EC_BINARY_AGE    += 1
dnl
dnl If any functions have been added, set EC_INTERFACE_AGE to 0.
dnl If backwards compatibility has been broken,
dnl set EC_BINARY_AGE and EC_INTERFACE_AGE to 0.

EC_MAJOR_VERSION=0
EC_MINOR_VERSION=0
EC_MICRO_VERSION=23
EC_INTERFACE_AGE=1
EC_BINARY_AGE=1

EC_VERSION=$EC_MAJOR_VERSION.$EC_MINOR_VERSION.$EC_MICRO_VERSION
AC_SUBST(EC_MAJOR_VERSION)
AC_SUBST(EC_MINOR_VERSION)
AC_SUBST(EC_MICRO_VERSION)
AC_SUBST(EC_INTERFACE_AGE)
AC_SUBST(EC_BINARY_AGE)
AC_SUBST(EC_VERSION)

dnl libtool versioning
LT_RELEASE=$EC_MAJOR_VERSION.$EC_MINOR_VERSION.$EC_MICRO_VERSION
LT_CURRENT=`expr $EC_MICRO_VERSION - $EC_INTERFACE_AGE`
LT_REVISION=$EC_INTERFACE_AGE
LT_AGE=`expr $EC_BINARY_AGE - $EC_INTERFACE_AGE`
AC_SUBST(LT_RELEASE)
AC_SUBST(LT_CURRENT)
AC_SUBST(LT_REVISION)
AC_SUBST(LT_AGE)

dnl Set VERSION so we only need to edit in here
AC_SUBST(PACKAGE)
AC_SUBST(VERSION)
VERSION=$EC_VERSION
PACKAGE=elastic

dnl Use autoconf/automake files from specied directory
AC_CONFIG_AUX_DIR(build)

dnl Determine host and target system type
AC_CANONICAL_SYSTEM

AM_INIT_AUTOMAKE($PACKAGE, $VERSION, no-define)

dnl Specify a configuration file
AM_CONFIG_HEADER(config.h src/tsize.h)

dnl Check for Cygwin32
AC_SUBST(CYGWIN)
AC_CYGWIN
AM_CONDITIONAL(CYGWIN, test x$CYGWIN = xyes)

dnl Check for Mingw32
AC_SUBST(MINGW32)
AC_MINGW32
AM_CONDITIONAL(MINGW32, test x$MINGW32 = xyes)

AM_CONDITIONAL(WIN32, test x$MINGW32 = xyes || test x$CYGWIN = xyes)

AC_SUBST(MAKEDLL)
if test "x$MINGW32" = "xyes"; then
  MAKEDLL='${top_srcdir}/mingw32-makedll'
fi

dnl Check executable extension
AC_EXEEXT

dnl Cross compilation
CROSSCOMPILING=$cross_compiling
AC_SUBST(CROSSCOMPILING)
AM_CONDITIONAL(CROSSCOMPILING, test x$cross_compiling = xyes)

dnl Enable building of libltdl as a convenience library
dnl and set LIBLTDL accordingly
dnl AC_LIBLTDL_CONVENIENCE('src/libltdl')
AC_LIBLTDL_CONVENIENCE('${top_builddir}/src/libltdl')
dnl AC_LIBLTDL_CONVENIENCE

dnl Substitute INCLTDL and LIBLTDL in Makefiles
dnl (but overrides brain-dead INCLTDL)
INCLTDL='-I${top_srcdir}/src/libltdl'
AC_SUBST(INCLTDL)
AC_SUBST(LIBLTDL)

dnl Check for dlopen support
AC_LIBTOOL_DLOPEN

dnl Initialize libtool
AM_PROG_LIBTOOL

dnl Configure libltdl
AC_CONFIG_SUBDIRS(src/libltdl)

dnl Set name for machine-dependent library files
AC_SUBST(MACHDEP)
AC_MSG_CHECKING(MACHDEP)
if test -z "$MACHDEP"
then
	ac_sys_system=`uname -s`
	if test "$ac_sys_system" = "AIX" ; then
		ac_sys_release=`uname -v`
	else
		ac_sys_release=`uname -r`
	fi
	ac_md_system=`echo $ac_sys_system |
			tr -d '[/ ]' | tr '[[A-Z]]' '[[a-z]]'`
	ac_md_release=`echo $ac_sys_release |
			tr -d '[/ ]' | sed 's/\..*//'`
	MACHDEP="$ac_md_system$ac_md_release"

	case $MACHDEP in
	'')     MACHDEP="unknown";;
	esac
fi

dnl Optional features
AC_ARG_ENABLE(devel,        [  --enable-devel=[no/yes]         - Enable developer mode [default=no]],,enable_devel=no)
AC_ARG_ENABLE(debug,        [  --enable-debug=[no/minimum/yes] - Enable compiling with debugging information [default=minimum]],,enable_debug=minimum)
AC_ARG_ENABLE(memdebug,     [  --enable-memdebug=[no/yes]      - Enable compiling with memory coerency checks [default=no]],,enable_memdebug=no)
AC_ARG_ENABLE(profile,      [  --enable-profile=[no/yes]       - Enable compiling with profile information [default=no]],,enable_profile=no)
AC_ARG_ENABLE(bprofile,     [  --enable-bprofile=[no/yes]      - Enable compiling with bprof profile information [default=no]],,enable_bprofile=no)
AC_ARG_ENABLE(pentium,      [  --enable-pentium=[no/gcc/egcs]  - Enable pentium optimizations [default=no]],,enable_pentium=no)

AC_SUBST(CFLAGS)
AC_SUBST(CORE_CFLAGS)
AC_SUBST(MODULE_CFLAGS)

if test "x$enable_devel" = "xyes"; then
  test "$cflags_set" = set || CFLAGS="-Wall -Winline -Wstrict-prototypes -Wno-protocols"
fi

if test "x$enable_debug" = "xyes"; then
  test "$cflags_set" = set || CFLAGS="$CFLAGS -g -O0"
  ELASTIC_DEBUG_FLAGS="-DEC_DEBUG -D_GNU_SOURCE"
fi

if test "x$enable_profile" = "xyes"; then
  test "$cflags_set" = set || CFLAGS="$CFLAGS -pg"
fi

if test "x$enable_bprofile" = "xyes"; then
  test "$cflags_set" = set || CFLAGS="$CFLAGS -g"
  AC_MODULE_BMON
  PROFILEOBJ="$BMON"
else
  PROFILEOBJ=""
fi

if test "x$MINGW32" = "xyes"; then
  test "$cflags_set" = set || CFLAGS="$CFLAGS -fnative-struct"
fi

if test "x$CYGWIN" = "xyes"; then
  test "$cflags_set" = set || CFLAGS="$CFLAGS -DCYGWIN"
fi

if test "x$MINGW32" = "xyes"; then
  test "$cflags_set" = set || CFLAGS="$CFLAGS -DMINGW32"
fi

if test "x$enable_pentium" = "xgcc"; then
  test "$cflags_set" = set || CFLAGS="$CFLAGS -O3 -m486 -malign-jumps=2 -malign-loops=2 -malign-functions=2"
elif test "x$enable_pentium" = "xegcs"; then
  test "$cflags_set" = set || CFLAGS="$CFLAGS -O6 -mcpu=pentium -march=pentium -mpentium -malign-jumps=2 -malign-loops=2 -malign-functions=2"
fi

test "$cflags_set" = set || CFLAGS="$CFLAGS $ELASTIC_DEBUG_FLAGS"

CORE_CFLAGS="$CFLAGS -DELASTIC_EXPORTS -DELASTIC_CORE"
MODULE_CFLAGS="$CFLAGS"

dnl Checks for programs.
AC_PROG_YACC
AC_PROG_CC
AC_PROG_CPP
AM_PROG_LEX
AC_PROG_YACC
AC_PROG_INSTALL
AC_PROG_MAKE_SET
AC_PROG_RANLIB
dnl AC_PROG_SDF

dnl Check if SDF is present, but don't require it
AC_CHECK_PROG(SDF, sdf, sdf)
AC_SUBST(SDFFLAGS)
SDFFLAGS='-v -I ${top_srcdir}/doc'

dnl Check for perl
AC_CHECK_PROGS(PERL, perl5 perl)

AC_DEFUN(AC_CHECK_LIB_EFENCE,
[ if test "x$enable_memdebug" = "xyes" -a "x$enable_debug" != "xno"; then \
	AC_CHECK_LIB(efence, malloc)
  fi
])

dnl Checks for libraries.
AC_CHECK_LIB(m, sin)
dnl AC_CHECK_LIB(nsl, gethostbyname)
dnl AC_CHECK_LIB(socket, connect)
dnl AC_CHECK_FUNC(inet_aton,,[AC_CHECK_LIB(resolv,inet_aton,RES_LIBS="-lresolv")])
AC_CHECK_LIB(dl, dlopen)
dnl AC_CHECK_LIB(readline, readline)
dnl AC_CHECK_LIB(fl, yywrap)
AC_CHECK_LIB_EFENCE

dnl Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS(fcntl.h limits.h values.h malloc.h string.h sys/file.h sys/types.h sys/ioctl.h sys/time.h sys/times.h syslog.h unistd.h netinet/in.h)

dnl Checks for typedefs, structures, and compiler characteristics.
if test "x$MINGW32" = "xyes"; then
	ac_cv_c_bigendian=no
else
	AC_C_BIGENDIAN
fi
AC_C_CONST
AC_C_INLINE
AC_TYPE_MODE_T
AC_TYPE_PID_T
AC_TYPE_SIZE_T
AC_HEADER_TIME
AC_CHECK_SIZEOF(unsigned char, 1)
AC_CHECK_SIZEOF(char, 1)
AC_CHECK_SIZEOF(short, 2)
AC_CHECK_SIZEOF(int, 4)
AC_CHECK_SIZEOF(long, 4)
AC_CHECK_SIZEOF(void *, 4)
AC_CHECK_SIZEOF(float, 4)
AC_CHECK_SIZEOF(double, 8)

dnl Checks for library functions.
AC_FUNC_ALLOCA
AC_FUNC_MEMCMP
AC_FUNC_SETPGRP
AC_TYPE_SIGNAL
AC_FUNC_VPRINTF
AC_CHECK_FUNCS(strcasecmp index rindex strchr strrchr strtod strtol)
AC_CHECK_FUNCS(getenv setenv)
AC_CHECK_FUNCS(getcwd select socket strerror)
AC_CHECK_FUNCS(ecvt fcvt isinf isnan)
AC_CHECK_FUNCS(getopt)

dnl Gather info about shared linking
dnl Borrowed from SWIG1.1p5, that says:
dnl This borrowed from the Python configuration file

AC_SUBST(SO)
AC_SUBST(LDSHARED)
AC_SUBST(CCSHARED)
AC_SUBST(LINKFORSHARED)
# SO is the extension of shared libraries `(including the dot!)
# -- usually .so, .sl on HP-UX
AC_MSG_CHECKING(SO)
if test -z "$SO"
then
	case $ac_sys_system in
	hp*|HP*) SO=.sl;;
	NeXT|next) SO=.a;; # no shared libs on NeXT 3.3 and less
	*)	SO=.so;;
	esac

	case $target_alias in
	i386-mingw32msvc*) SO=.dll;;
	esac
fi
AC_MSG_RESULT($SO)
# LDSHARED is the ld *command* used to create shared library
# -- "ld" on SunOS 4.x.x, "ld -G" on SunOS 5.x, "ld -shared" on IRIX 5
AC_MSG_CHECKING(LDSHARED)
if test -z "$LDSHARED"
then
	case $ac_sys_system/$ac_sys_release in
	AIX*) LDSHARED="ld_so_aix";;
	IRIX*) LDSHARED="ld -shared";;
	SunOS/4*) LDSHARED="ld";;
	SunOS/5*) LDSHARED="ld -G";;
	hp*|HP*) LDSHARED="ld -b";;
	OSF*) LDSHARED="ld -shared -expect_unresolved \"*\"";;
	DYNIX/ptx*) LDSHARED="ld -G";;
	Linux*) LDSHARED="gcc -shared";;
	FreeBSD*) LDSHARED="ld -Bshareable";;
	NeXT|next/3*) LDSHARED="ld -u libsys_s";;
	*)	LDSHARED="ld";;
	esac

	case $target_alias in
	linux*) LDSHARED="gcc -shared";;
	i386-mingw32msvc*) LDSHARED="i386-mingw32msvc-ld";;
	esac
fi
AC_MSG_RESULT($LDSHARED)
# CCSHARED are the C *flags* used to create objects to go into a shared
# library -- this is only needed for a few systems
AC_MSG_CHECKING(CCSHARED)
if test -z "$CCSHARED"
then
	case $ac_sys_system in
	hp*|HP*) if test "$GCC" = yes;
		 then CCSHARED="-fpic";
		 else CCSHARED="+z";
		 fi;;
	Linux*) CCSHARED="-fPIC";;
	FreeBSD*) CCSHARED="-fpic";;
	esac

	case $target_alias in
	linux*) CCSHARED="-fPIC";;
	i386-mingw32msvc*) CCSHARED="";;
	esac
fi
AC_MSG_RESULT($CCSHARED)

# LINKFORSHARED are the flags passed to the $(CC) command that links
# the a few executables -- this is only needed for a few systems

AC_MSG_CHECKING(LINKFORSHARED)
if test -z "$LINKFORSHARED"
then
	case $ac_sys_system/$ac_sys_release in
	AIX*)	LINKFORSHARED='-Wl,-bE:$(srcdir)/elastic.exp -lld';;
	hp*|HP*)
	    LINKFORSHARED="-Wl,-E -Wl,+s -Wl,+b\$(BINLIBDEST)/lib-dynload";;
	Linux*) LINKFORSHARED="-Xlinker -export-dynamic";;
	next/*) LINKFORSHARED="-u libsys_s";;
	SCO_SV*) LINKFORSHARED="-Bdynamic -dy -Wl,-Bexport";;
	IRIX*/6*) LINKFORSHARED="-all";;
	esac

	case $target_alias in
	linux*) LINKFORSHARED="-Xlinker -export-dynamic";;
	i386-mingw32msvc*) LINKFORSHARED="";;
	esac
fi
AC_MSG_RESULT($LINKFORSHARED)

dnl makemodule - dynamically loadable module generation
AC_SUBST(MKMODULE)
AC_SUBST(MKMODULEFLAGS)
AC_SUBST(MKMODULELIBS)
MKMODULE='${top_srcdir}/makemodule'
dnl MKMODULEFLAGS='-c ${top_builddir}/src/elastic-config --elastic-import=${top_builddir}/src/libelastic.a'
MKMODULEFLAGS='-c ${top_builddir}/src/elastic-config --elastic-import=${top_builddir}/src/libelastic.la'
MKMODULELIBS=''

dnl Emit optional features variables
AC_SUBST(ELASTIC_DEBUG_FLAGS)
AC_SUBST(PROFILEOBJ)

AC_OUTPUT(Makefile src/cnf.h src/elastic-config src/Makefile src/arithmetic/Makefile src/modules/Makefile src/modules-dynamic/Makefile src/modules-dynamic/re/Makefile src/modules-dynamic/re/pcre/Makefile src/types/Makefile src/dl/Makefile src/unix/Makefile src/win32/Makefile regress/Makefile doc/Makefile aclocal/Makefile doc/INSTALL.sdf)
