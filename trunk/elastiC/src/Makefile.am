# ==========================================================================
# Makefile.am
# ==========================================================================
# Automake makefile template for elastiC.
# --------------------------------------------------------------------------
#   AUTHOR:  Marco Pantaleoni         E-mail: panta@elasticworld.org
#
#   Created: 15 Nov 1999
#
#   $Id$
# --------------------------------------------------------------------------
#    Copyright (C) 1999-2002 Marco Pantaleoni. All rights reserved.
#
#  The contents of this file are subject to the elastiC License version 1.0
#  (the "elastiC License"); you may not use this file except in compliance
#  with the elastiC License. You may obtain a copy of the elastiC License at
#  http://www.elasticworld.org/LICENSE
#
#  IN NO EVENT SHALL THE AUTHOR OR DISTRIBUTORS BE LIABLE TO ANY PARTY
#  FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
#  ARISING OUT OF THE USE OF THIS SOFTWARE, ITS DOCUMENTATION, OR ANY
#  DERIVATIVES THEREOF, EVEN IF THE AUTHOR HAS BEEN ADVISED OF THE
#  POSSIBILITY OF SUCH DAMAGE.
#
#  THE AUTHOR AND DISTRIBUTORS SPECIFICALLY DISCLAIM ANY WARRANTIES,
#  INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY,
#  FITNESS FOR A PARTICULAR PURPOSE, AND NON-INFRINGEMENT.  THIS SOFTWARE
#  IS PROVIDED ON AN "AS IS" BASIS, AND THE AUTHOR AND DISTRIBUTORS HAVE
#  NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR
#  MODIFICATIONS.
#
#  See the elastiC License for the specific language governing rights and
#  limitations under the elastiC License.
# ==========================================================================

EXTRA_DIST = EXCEPTIONS INCONSISTENCIES libltdl.patch gen-primetable.pl primes.gnu
if WIN32_SDK
SUBDIRS = libltdl arithmetic dl modules types win32 . modules-dynamic
else
SUBDIRS = libltdl arithmetic dl modules types unix . modules-dynamic
endif

CLEANFILES = elastic-$(EC_API_VERSION).def elastic-$(EC_API_VERSION).dll libelastic-$(EC_API_VERSION).a libelasticrt-$(EC_API_VERSION).a

# Directory where sources are, from where we are.
srcdir = @srcdir@
VPATH = @srcdir@

INCLUDES = -I$(top_srcdir) $(INCLTDL)
CFLAGS     = $(CORE_CFLAGS)
BIN_CFLAGS = $(MODULE_CFLAGS)

YACC = @YACC@ -d

elasticincludedir = $(includedir)/elastic

bin_PROGRAMS = ec ecc ecrt ecdump
lib_LTLIBRARIES = libelastic-0.0.la libelasticrt-0.0.la

if WIN32_SDK

# - Win32 DLL -
DLL_NAME    = elastic-$(EC_API_VERSION)$(SO)
DLL_EXP_LIB = libelastic-$(EC_API_VERSION).a
DLL_EXP_DEF = elastic-$(EC_API_VERSION).def
ELASTIC_LIB = $(DLL_NAME)
ELASTIC_LIB_LINK = $(DLL_EXP_LIB)
elasticdlldir = $(libdir)
elasticdll_DATA = $(DLL_NAME) $(DLL_EXP_LIB) $(DLL_EXP_DEF)

RTDLL_NAME    = elasticrt-$(EC_API_VERSION)$(SO)
RTDLL_EXP_LIB = libelasticrt-$(EC_API_VERSION).a
RTDLL_EXP_DEF = elasticrt-$(EC_API_VERSION).def
ELASTICRT_LIB = $(RTDLL_NAME)
ELASTICRT_LIB_LINK = $(RTDLL_EXP_LIB)
elasticrtdlldir = $(libdir)
elasticrtdll_DATA = $(RTDLL_NAME) $(RTDLL_EXP_LIB) $(RTDLL_EXP_DEF)

else

# - UNIX -
ELASTIC_LIB = libelastic-$(EC_API_VERSION).la
ELASTIC_LIB_LINK = $(ELASTIC_LIB)

ELASTICRT_LIB = libelasticrt-$(EC_API_VERSION).la
ELASTICRT_LIB_LINK = $(ELASTICRT_LIB)

endif

static_sources = \
	ast.c		\
	builtin.c	\
	bytecode.c	\
	compat.c	\
	compile.c	\
	debug.c		\
	dstring.c	\
	elastic_p.y	\
	elastic_s.l	\
	elastic.c	\
	gc.c		\
	hashdefs.c	\
	hashfunc.c	\
	hashtable.c	\
	interp.c	\
	lib.c		\
	list.c		\
	memory.c	\
	numeric.c	\
	object.c	\
	oop.c		\
	package.c	\
	packageio.c	\
	prime.c		\
	printf.c	\
	sprintf.c	\
	strtable.c	\
	strtod.c	\
	symbol.c	\
	user.c		\
	utility.c

# Run-time only sources
# These are used to build the library
# version without compiler functionalities

static_rt_sources = \
	builtin.c	\
	bytecode.c	\
	compat.c	\
	debug.c		\
	dstring.c	\
	elastic.c	\
	gc.c		\
	hashdefs.c	\
	hashfunc.c	\
	hashtable.c	\
	interp.c	\
	lib.c		\
	list.c		\
	memory.c	\
	numeric.c	\
	object.c	\
	oop.c		\
	package.c	\
	packageio.c	\
	prime.c		\
	printf.c	\
	sprintf.c	\
	strtable.c	\
	strtod.c	\
	symbol.c	\
	user.c		\
	utility.c

# NOTE: cnf.h is (was) *PRIVATE*, but we have to install it
#       in order to allow for elastic.m4 to work properly
#       (Now we need it also because included by <elastic/basic.h>
#        Same goes for config.h)

# TODO: We need to install also private.h in order to compile the
#       gtk module. We have to find a solution.

# Source headers which are non-autogenerated headers
source_headers = \
	arithmetic.h	\
	ast.h		\
	basic.h		\
	bitstring.h	\
	bytecode.h	\
	compile.h	\
	cnf.h		\
	conf.h		\
	debug.h		\
	dstring.h	\
	elastic.h	\
	file.h		\
	floatio.h	\
	hash.h		\
	hashdefs.h	\
	hashfunc.h	\
	hashtable.h	\
	lib.h		\
	list.h		\
	memory.h	\
	object.h	\
	oop.h		\
	os.h		\
	prime.h		\
	stackrecycle.h	\
	strtable.h	\
	user.h		\
	utility.h

elasticinclude_HEADERS = \
	$(source_headers)	\
	tsize.h			\
	private.h

noinst_HEADERS = \
	compat.h		\
	primes.h		\
	elastic_p.h

primes.h: gen-primetable.pl
	$(srcdir)/gen-primetable.pl >$@

# Trick
elastic_p.h: elastic_p.c
##elastic_s.h: elastic_p.h elastic_s.c

if WIN32_SDK
os_objects = \
	win32/libos.la
else
os_objects = \
	unix/libos.la
endif

arithmetic_objects = \
	arithmetic/libarithmetic.la

modules_objects = \
	modules/libmodules.la

types_objects = \
	types/libtypes.la

dl_objects = \
	dl/libdl.la

# we are forced to put directly X_Y instead of @EC_API_VERSION@
# or $(EC_API_VERSION) in targets.
libelastic_0_0_la_SOURCES = \
	$(static_sources) \
	$(source_headers)
libelastic_0_0_la_LIBADD = \
	$(os_objects)		\
	$(arithmetic_objects)	\
	$(modules_objects)	\
	$(types_objects)	\
	$(dl_objects)		\
	@ALLOCA@

# We should use -version-info, but we've not yet
# settled on the correct numbering scheme. So
# for the moment we use -release.
libelastic_0_0_la_LDFLAGS = \
	-version-info $(LT_VERSION_INFO)	\
	-export-dynamic				\
	-rpath @prefix@/lib			\
	@LIBTOOL_EXPORT_OPTIONS@		\
	-lm					\
	$(LIBLTDL)
#
#	-release $(LT_RELEASE)			\
#

#libelastic_0_0_la_LDFLAGS = \
#	-release $(LT_RELEASE)	\
#	-lm			\
#	$(LIBLTDL)
##libelastic_0_0_la_LDFLAGS = \
##	-version-info $(LT_CURRENT):$(LT_REVISION):$(LT_AGE)	\
##	-release $(LT_RELEASE)					\
##	-lm

libelasticrt_0_0_la_SOURCES = \
	$(static_rt_sources) \
	$(source_headers)
libelasticrt_0_0_la_CFLAGS = -DEC_WITHOUT_COMPILER $(AM_CFLAGS)
libelasticrt_0_0_la_LIBADD = \
	$(os_objects)		\
	$(arithmetic_objects)	\
	$(modules_objects)	\
	$(types_objects)	\
	$(dl_objects)		\
	@ALLOCA@
libelasticrt_0_0_la_LDFLAGS = \
	-version-info $(LT_VERSION_INFO)	\
	-export-dynamic				\
	-rpath @prefix@/lib			\
	@LIBTOOL_EXPORT_OPTIONS@		\
	-lm					\
	$(LIBLTDL)
#
#	-release $(LT_RELEASE)			\
#

# libelasticrt_0_0_la_CFLAGS = -DEC_WITHOUT_COMPILER $(AM_CFLAGS)

#ec_SOURCES = \
#	$(static_sources) \
#	$(source_headers) \
#	ec.c
ec_SOURCES = ec.c
ec_LDADD = $(ELASTIC_LIB_LINK) @PROFILEOBJ@
if WIN32
ec_LDFLAGS =
else
ec_LDFLAGS = -rdynamic
endif
#ec_DEPENDENCIES = libelastic-$(EC_API_VERSION).la $(ELASTIC_LIB)

#ecc_SOURCES = \
#	$(static_sources) \
#	$(source_headers) \
#	ecc.c
ecc_SOURCES = ecc.c
ecc_LDADD = $(ELASTIC_LIB_LINK) @PROFILEOBJ@
if WIN32
ecc_LDFLAGS =
else
ecc_LDFLAGS = -rdynamic
endif
#ecc_DEPENDENCIES = libelastic-$(EC_API_VERSION).la $(ELASTIC_LIB)

#ecrt_SOURCES = \
#	$(static_rt_sources) \
#	$(source_headers) \
#	ecrt.c
ecrt_SOURCES = ecrt.c
ecrt_LDADD = $(ELASTICRT_LIB_LINK) @PROFILEOBJ@
if WIN32
ecrt_LDFLAGS =
else
ecrt_LDFLAGS = -rdynamic
endif
#ecrt_DEPENDENCIES = libelastic-$(EC_API_VERSION).la $(ELASTICRT_LIB)
# ecrt_CFLAGS = -DEC_WITHOUT_COMPILER $(AM_CFLAGS)

#ecdump_SOURCES = \
#	$(static_sources) \
#	$(source_headers) \
#	ecdump.c
ecdump_SOURCES = ecdump.c
ecdump_LDADD = $(ELASTIC_LIB_LINK) @PROFILEOBJ@
if WIN32
ecdump_LDFLAGS =
else
ecdump_LDFLAGS = -rdynamic
endif
#ecdump_DEPENDENCIES = libelastic-$(EC_API_VERSION).la $(ELASTIC_LIB)

##BUILT_SOURCES =

# cause the built sources to be rebuild when possible, even with --include-deps
$(static_sources): $(BUILT_SOURCES)

if WIN32
# Build Win32 DLLs and export libraries
$(DLL_NAME) $(DLL_EXP_LIB): libelastic-$(EC_API_VERSION).la
	$(MAKEDLL) $@ "" "" .libs/libelastic-$(EC_API_VERSION).a

$(RTDLL_NAME) $(RTDLL_EXP_LIB): libelasticrt-$(EC_API_VERSION).la
	$(MAKEDLL) $@ "" "" .libs/libelasticrt-$(EC_API_VERSION).a
endif

ec.o: ec.c
	$(CC) $(DEFS) $(BIN_CFLAGS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) -o $@ -c $<

ecc.o: ecc.c
	$(CC) $(DEFS) $(BIN_CFLAGS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) -o $@ -c $<

ecrt.o: ecrt.c
	$(CC) $(DEFS) $(BIN_CFLAGS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) -o $@ -c $<

ecdump.o: ecdump.c
	$(CC) $(DEFS) $(BIN_CFLAGS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) -o $@ -c $<

if WIN32
# - WIN32 -
ec$(EXEEXT): $(ec_OBJECTS) $(ec_DEPENDENCIES) $(DLL_NAME)
	@rm -f ec$(EXEEXT)
	$(LINK) $(ec_LDFLAGS) $(ec_OBJECTS) $(ec_LDADD) $(LIBS)
ecc$(EXEEXT): $(ecc_OBJECTS) $(ecc_DEPENDENCIES) $(DLL_NAME)
	@rm -f ecc$(EXEEXT)
	$(LINK) $(ecc_LDFLAGS) $(ecc_OBJECTS) $(ecc_LDADD) $(LIBS)
ecrt$(EXEEXT): $(ecrt_OBJECTS) $(ecrt_DEPENDENCIES) $(RTDLL_NAME)
	@rm -f ecrt$(EXEEXT)
	$(LINK) $(ecrt_LDFLAGS) $(ecrt_OBJECTS) $(ecrt_LDADD) $(LIBS)
ecdump$(EXEEXT): $(ecdump_OBJECTS) $(ecdump_DEPENDENCIES) $(DLL_NAME)
	@rm -f ecdump$(EXEEXT)
	$(LINK) $(ecdump_LDFLAGS) $(ecdump_OBJECTS) $(ecdump_LDADD) $(LIBS)
endif

#if WIN32
## - WIN32 -
#ec$(EXEEXT): ec.o $(ec_DEPENDENCIES)
#	@rm -f ec$(EXEEXT)
#	$(LINK) $(ec_LDFLAGS) ec.o $(ec_LDADD) $(LIBS)
#
#ecc$(EXEEXT): ecc.o $(ecc_DEPENDENCIES)
#	@rm -f ecc$(EXEEXT)
#	$(LINK) $(ecc_LDFLAGS) ecc.o $(ecc_LDADD) $(LIBS)
#
#ecdump$(EXEEXT): ecdump.o $(ecdump_DEPENDENCIES)
#	@rm -f ecdump$(EXEEXT)
#	$(LINK) $(ecdump_LDFLAGS) ecdump.o $(ecdump_LDADD) $(LIBS)
#else
## - UNIX -
#ec$(EXEEXT): $(ec_OBJECTS) $(ec_DEPENDENCIES)
#	@rm -f ec$(EXEEXT)
#	$(LINK) $(ec_LDFLAGS) $(ec_OBJECTS) $(ec_LDADD) $(LIBS)
#
#ecc$(EXEEXT): $(ecc_OBJECTS) $(ecc_DEPENDENCIES)
#	@rm -f ecc$(EXEEXT)
#	$(LINK) $(ecc_LDFLAGS) $(ecc_OBJECTS) $(ecc_LDADD) $(LIBS)
#
#ecdump$(EXEEXT): $(ecdump_OBJECTS) $(ecdump_DEPENDENCIES)
#	@rm -f ecdump$(EXEEXT)
#	$(LINK) $(ecdump_LDFLAGS) $(ecdump_OBJECTS) $(ecdump_LDADD) $(LIBS)
#endif

ChangeLog.html: ChangeLog
	enscript -o $@ -W html -Echangelog --color $<

install-exec-local:
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	$(INSTALL_SCRIPT) elastic-config $(DESTDIR)$(bindir)

dist-hook:
	mkdir -p $(distdir)/compat
	cp -a compat/* $(distdir)/compat
#	# We must copy all non-unix platform subdirs
#	mkdir -p $(distdir)/win32
#	cp -a win32/* $(distdir)/win32
