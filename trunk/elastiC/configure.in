dnl ==========================================================================
dnl configure.in
dnl ==========================================================================
dnl configure script for elastiC.
dnl --------------------------------------------------------------------------
dnl   AUTHOR:  Marco Pantaleoni         E-mail: panta@elasticworld.org
dnl
dnl   Created: 1999
dnl
dnl   $Id$
dnl --------------------------------------------------------------------------
dnl    Copyright (C) 1999-2002 Marco Pantaleoni. All rights reserved.
dnl
dnl  The contents of this file are subject to the elastiC License version 1.0
dnl  (the "elastiC License"); you may not use this file except in compliance
dnl  with the elastiC License. You may obtain a copy of the elastiC License at
dnl  http://www.elasticworld.org/LICENSE
dnl
dnl  IN NO EVENT SHALL THE AUTHOR OR DISTRIBUTORS BE LIABLE TO ANY PARTY
dnl  FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
dnl  ARISING OUT OF THE USE OF THIS SOFTWARE, ITS DOCUMENTATION, OR ANY
dnl  DERIVATIVES THEREOF, EVEN IF THE AUTHOR HAS BEEN ADVISED OF THE
dnl  POSSIBILITY OF SUCH DAMAGE.
dnl
dnl  THE AUTHOR AND DISTRIBUTORS SPECIFICALLY DISCLAIM ANY WARRANTIES,
dnl  INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY,
dnl  FITNESS FOR A PARTICULAR PURPOSE, AND NON-INFRINGEMENT.  THIS SOFTWARE
dnl  IS PROVIDED ON AN "AS IS" BASIS, AND THE AUTHOR AND DISTRIBUTORS HAVE
dnl  NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR
dnl  MODIFICATIONS.
dnl
dnl  See the elastiC License for the specific language governing rights and
dnl  limitations under the elastiC License.
dnl ==========================================================================

dnl Process this file with autoconf to produce a configure script.

# require autoconf 2.53
AC_PREREQ(2.53)

AC_INIT(src/elastic.c)

# Save this value here, since automake will set cflags later
cflags_set=${CFLAGS+set}

dnl ========================================================================
dnl V E R S I O N I N G
dnl ------------------------------------------------------------------------
dnl
dnl Library versioning is needed in order to allow programs and libraries
dnl to link with different versions of the elastiC library as long as this
dnl presents a compatible range of API implementations.
dnl The elastiC library will contain information saying that it implements
dnl APIs in a range, such as [X1:X2].
dnl libraries with different major and minor numbers will *always* be
dnl considered incompatible.
dnl
dnl We currently use libtool (at least on unix) to specify implemented
dnl API versions.
dnl There are many components in the elastiC versioning scheme:
dnl
dnl elastiC package version specification
dnl -------------------------------------
dnl
dnl    X.Y.Z
dnl
dnl where:
dnl    X   EC_MAJOR_VERSION
dnl    Y   EC_MINOR_VERSION
dnl    Z   EC_MICRO_VERSION
dnl
dnl libtool library version specification
dnl -------------------------------------
dnl
dnl    C.R.A
dnl
dnl where C.R.A constitutes the libtool --version-info specification as
dnl described in the libtool manual:
dnl
dnl    C   LT_CURRENT    The most recent interface number implemented by this
dnl                      library.
dnl    R   LT_REVISION   The implementation number of the CURRENT interface.
dnl    A   LT_AGE        The difference between the newest and oldest interfaces
dnl                      that this library implements. In other words, this
dnl                      library implements all interface numbers in range
dnl                      LT_CURRENT - AGE to LT_CURRENT  or [C-A:C]
dnl
dnl elastiC library version specification
dnl -------------------------------------
dnl
dnl our library version specification will be built using the aforementioned
dnl X, Y and Z numbers and the following API version numbers:
dnl
dnl    I   EC_INTERFACE_AGE  The implementation number of the current interface.
dnl    B   EC_BINARY_AGE     The number of releases since last making a binary
dnl                          incompatible change.
dnl
dnl The public interface, modified when making a public release, is the tuple
dnl (X Y Z I B)
dnl
dnl When making a new release:
dnl   Z += 1         (EC_MICRO_VERSION += 1)
dnl
dnl If the source code of the library has changed in any way since the previous
dnl release:
dnl
dnl   I += 1         (EC_INTERFACE_AGE += 1)
dnl   B += 1         (EC_BINARY_AGE    += 1)
dnl
dnl If functions have been added since the previous release:
dnl
dnl   I = 0          (EC_INTERFACE_AGE  = 0)
dnl
dnl If backwards compatibility has been broken since the previous release:
dnl
dnl   I = 0          (EC_INTERFACE_AGE  = 0)
dnl   B = 0          (EC_BINARY_AGE     = 0)
dnl
dnl Given these guidelines, we use the following equations for libtool
dnl versioning:
dnl
dnl   C = (100 * Y + Z - I)
dnl   R = I
dnl   A = B - I
dnl
dnl and the elastiC library will be named:
dnl
dnl    libelastic-X.Y.so.(C-A).A.R  ==  libelastic-X.Y.so.(100Y+Z-B).(B-I).I

EC_MAJOR_VERSION=0
EC_MINOR_VERSION=0
EC_MICRO_VERSION=38
EC_SUBMICRO_VERSION=-testing
EC_INTERFACE_AGE=0
EC_BINARY_AGE=0

EC_VERSION=${EC_MAJOR_VERSION}.${EC_MINOR_VERSION}.${EC_MICRO_VERSION}$EC_SUBMICRO_VERSION
dnl The following is the X.Y used in -lelastic-X.Y and -lelastic-MODULE-X.Y
EC_API_VERSION=$EC_MAJOR_VERSION.$EC_MINOR_VERSION

AC_SUBST(EC_MAJOR_VERSION)
AC_SUBST(EC_MINOR_VERSION)
AC_SUBST(EC_MICRO_VERSION)
AC_SUBST(EC_SUBMICRO_VERSION)
AC_SUBST(EC_INTERFACE_AGE)
AC_SUBST(EC_BINARY_AGE)
AC_SUBST(EC_VERSION)
AC_SUBST(EC_API_VERSION)

dnl libtool versioning
dnl
dnl LT_CURRENT
dnl      The most recent interface number that this library implements.
dnl 
dnl LT_REVISION
dnl      The implementation number of the CURRENT interface.
dnl 
dnl LT_AGE
dnl      The difference between the newest and oldest interfaces that this
dnl      library implements.  In other words, the library implements all the
dnl      interface numbers in the range from number `CURRENT - AGE' to
dnl      `CURRENT': [LT_CURRENT - LT_AGE : LT_CURRENT]
dnl
LT_RELEASE=$EC_MAJOR_VERSION.$EC_MINOR_VERSION.$EC_MICRO_VERSION
LT_CURRENT=`expr 100 '*' $EC_MINOR_VERSION + $EC_MICRO_VERSION - $EC_INTERFACE_AGE`
LT_REVISION=$EC_INTERFACE_AGE
LT_AGE=`expr $EC_BINARY_AGE - $EC_INTERFACE_AGE`
LT_CURRENT_MINUS_AGE=`expr $LT_CURRENT - $LT_AGE`
LT_VERSION_INFO=$LT_CURRENT:$LT_REVISION:$LT_AGE
AC_SUBST(LT_RELEASE)
AC_SUBST(LT_CURRENT)
AC_SUBST(LT_REVISION)
AC_SUBST(LT_AGE)
AC_SUBST(LT_CURRENT_MINUS_AGE)
AC_SUBST(LT_VERSION_INFO)

dnl Lowest and highest interface versions provided
EC_INTERFACE_LO=$LT_CURRENT_MINUS_AGE
EC_INTERFACE_HI=$LT_CURRENT
AC_SUBST(EC_INTERFACE_LO)
AC_SUBST(EC_INTERFACE_HI)

dnl Set VERSION so we only need to edit in here
AC_SUBST(PACKAGE)
AC_SUBST(VERSION)
VERSION=$EC_VERSION
PACKAGE=elastic

dnl Use autoconf/automake files from specied directory
AC_CONFIG_AUX_DIR(build)

dnl Determine host and target system type
AC_CANONICAL_SYSTEM

AM_INIT_AUTOMAKE($PACKAGE, $VERSION, no-define)

dnl Specify a configuration file
AM_CONFIG_HEADER(config.h src/tsize.h)

dnl Check for Cygwin32
AC_SUBST(CYGWIN)
AC_CYGWIN
AM_CONDITIONAL(CYGWIN, test x$CYGWIN = xyes)

dnl Check for Mingw32
AC_SUBST(MINGW32)
AC_MINGW32
AM_CONDITIONAL(MINGW32, test x$MINGW32 = xyes)

AM_CONDITIONAL(CYGWIN,  test x$CYGWIN = xyes)
AM_CONDITIONAL(MINGW32, test x$MINGW32 = xyes)
AM_CONDITIONAL(WIN32, test x$MINGW32 = xyes || test x$CYGWIN = xyes)
AM_CONDITIONAL(WIN32_SDK, test x$MINGW32 = xyes && test ! x$CYGWIN = xyes)

AC_SUBST(MAKEDLL)
if test "x$MINGW32" = "xyes"; then
  MAKEDLL='${top_srcdir}/mingw32-makedll'
fi

dnl Check executable extension
AC_EXEEXT

dnl Cross compilation
CROSSCOMPILING=$cross_compiling
AC_SUBST(CROSSCOMPILING)
AM_CONDITIONAL(CROSSCOMPILING, test x$cross_compiling = xyes)

dnl Enable building of libltdl as a convenience library
dnl and set LIBLTDL accordingly
dnl AC_LIBLTDL_CONVENIENCE('src/libltdl')
dnl AC_LIBLTDL_CONVENIENCE('${top_builddir}/src/libltdl')
AC_LIBLTDL_CONVENIENCE('src/libltdl')
dnl AC_LIBLTDL_CONVENIENCE

dnl Substitute INCLTDL and LIBLTDL in Makefiles
dnl (but overrides brain-dead INCLTDL)
INCLTDL='-I${top_srcdir}/src/libltdl'
AC_SUBST(INCLTDL)
AC_SUBST(LIBLTDL)

dnl Check for dlopen support
AC_LIBTOOL_DLOPEN

dnl Initialize libtool
AC_PROG_CC
AM_PROG_LIBTOOL

dnl Configure libltdl
dnl AC_CONFIG_SUBDIRS(src/libltdl)
AC_CONFIG_SUBDIRS(src/libltdl src/modules-dynamic/re/pcre)

dnl  Initialize maintainer mode
AM_MAINTAINER_MODE

dnl Set name for machine-dependent library files
AC_SUBST(MACHDEP)
AC_MSG_CHECKING(MACHDEP)
if test -z "$MACHDEP"
then
	ac_sys_system=`uname -s`
	if test "$ac_sys_system" = "AIX" ; then
		ac_sys_release=`uname -v`
	else
		ac_sys_release=`uname -r`
	fi
	ac_md_system=`echo $ac_sys_system |
			tr -d '[/ ]' | tr '[[A-Z]]' '[[a-z]]'`
	ac_md_release=`echo $ac_sys_release |
			tr -d '[/ ]' | sed 's/\..*//'`
	MACHDEP="$ac_md_system$ac_md_release"

	case $MACHDEP in
	'')     MACHDEP="unknown";;
	esac
fi

dnl Optional features
AC_ARG_ENABLE(devel,        [  --enable-devel=[no/yes/pedantic] - Enable developer mode [default=no]],,enable_devel=no)
AC_ARG_ENABLE(debug,        [  --enable-debug=[no/minimum/yes]  - Enable compiling with debugging information [default=minimum]],,enable_debug=minimum)
AC_ARG_ENABLE(memdebug,     [  --enable-memdebug=[no/yes]       - Enable compiling with memory coerency checks [default=no]],,enable_memdebug=no)
AC_ARG_ENABLE(profile,      [  --enable-profile=[no/yes]        - Enable compiling with profile information [default=no]],,enable_profile=no)
AC_ARG_ENABLE(bprofile,     [  --enable-bprofile=[no/yes]       - Enable compiling with bprof profile information [default=no]],,enable_bprofile=no)
AC_ARG_ENABLE(pentium,      [  --enable-pentium=[no/gcc/egcs]   - Enable pentium optimizations [default=no]],,enable_pentium=no)

dnl for PCRE `configure'
AC_ARG_ENABLE(utf8,
[  --enable-utf8=[no/yes]           - Enable UTF8 support in PCRE (incomplete) [default=yes]],,enable_utf8=yes)

AC_SUBST(DLBACKEND)

AC_ARG_WITH(dlbackend,
[  --with-dlbackend=[dl/ltdl/win32/no]    - Specify shared objects backend [default=ltdl]],DLBACKEND=$with_dlbackend,DLBACKEND="ltdl")
AC_ARG_WITH(newline,
[  --with-newline=[CR/LF/specify]         - Use CR, LF or given value as newline in PCRE [default=LF]],newline_val=$with_newline,newline_val="LF")

AM_CONDITIONAL(DLBACKEND_DL, test x$DLBACKEND = xdl)
AM_CONDITIONAL(DLBACKEND_LTDL, test x$DLBACKEND = xltdl)
AM_CONDITIONAL(DLBACKEND_WIN32, test x$DLBACKEND = xwin32)
AM_CONDITIONAL(DLBACKEND_NO, test x$DLBACKEND = xno)

dnl Modules

AC_ARG_WITH(module_posix,
[  --with-module-posix=[no/static/dynamic] - Specify whether/how to build the POSIX module [default=dynamic]],ECMODULE_POSIX="${with_module_posix}",ECMODULE_POSIX="dynamic")
AC_ARG_WITH(module_errno,
[  --with-module-errno=[no/static/dynamic] - Specify whether/how to build the errno module [default=dynamic]],ECMODULE_ERRNO="${with_module_errno}",ECMODULE_ERRNO="dynamic")

if test "x$ECMODULE_POSIX" = "xno" ; then
  ecmodule_posix="no"
  ecmodule_posix_static=0
  ecmodule_posix_dynamic=0
elif test "x$ECMODULE_POSIX" = "xstatic" -o "x$ECMODULE_POSIX" = "xyes"; then
  ecmodule_posix="static"
  ecmodule_posix_static=1
  ecmodule_posix_dynamic=0
elif  test "x$ECMODULE_POSIX" = "xdynamic" -o "x$ECMODULE_POSIX" = "xshared"; then
  ecmodule_posix="dynamic"
  ecmodule_posix_static=0
  ecmodule_posix_dynamic=1
fi
AC_SUBST(ecmodule_posix)
AC_SUBST(ecmodule_posix_static)
AC_SUBST(ecmodule_posix_dynamic)
AM_CONDITIONAL(ECMODULE_POSIX_NO,      test x$ecmodule_posix = xno)
AM_CONDITIONAL(ECMODULE_POSIX_STATIC,  test x$ecmodule_posix = xstatic)
AM_CONDITIONAL(ECMODULE_POSIX_DYNAMIC, test x$ecmodule_posix = xdynamic)

if test "x$ECMODULE_ERRNO" = "xno" ; then
  ecmodule_errno="no"
  ecmodule_errno_static=0
  ecmodule_errno_dynamic=0
elif test "x$ECMODULE_ERRNO" = "xstatic" -o "x$ECMODULE_ERRNO" = "xyes"; then
  ecmodule_errno="static"
  ecmodule_errno_static=1
  ecmodule_errno_dynamic=0
elif  test "x$ECMODULE_ERRNO" = "xdynamic" -o "x$ECMODULE_ERRNO" = "xshared"; then
  ecmodule_errno="dynamic"
  ecmodule_errno_static=0
  ecmodule_errno_dynamic=1
fi
AC_SUBST(ecmodule_errno)
AC_SUBST(ecmodule_errno_static)
AC_SUBST(ecmodule_errno_dynamic)
AM_CONDITIONAL(ECMODULE_ERRNO_NO,      test x$ecmodule_errno = xno)
AM_CONDITIONAL(ECMODULE_ERRNO_STATIC,  test x$ecmodule_errno = xstatic)
AM_CONDITIONAL(ECMODULE_ERRNO_DYNAMIC, test x$ecmodule_errno = xdynamic)


AC_SUBST(CFLAGS)
AC_SUBST(CORE_CFLAGS)
AC_SUBST(MODULE_CFLAGS)

if test "x$enable_devel" = "xyes"; then
  test "$cflags_set" = set || CFLAGS='-Wall -Winline -Wstrict-prototypes -Wno-protocols -D_GNU_SOURCE -I${top_builddir}'
elif test "x$enable_devel" = "xpedantic"; then
  test "$cflags_set" = set || CFLAGS='-Wall -W -Winline -Wstrict-prototypes -Wno-protocols -D_GNU_SOURCE -I${top_builddir}'
fi

if test "x$enable_debug" = "xyes"; then
  test "$cflags_set" = set || CFLAGS="$CFLAGS -g -O0"
  ELASTIC_DEBUG_FLAGS="-DEC_DEBUG"
fi

if test "x$enable_debug" = "xminimum"; then
  test "$cflags_set" = set || CFLAGS="$CFLAGS -g -O2"
  ELASTIC_DEBUG_FLAGS="-DEC_DEBUG_MINIMUM"
fi

if test "x$enable_memdebug" = "xyes" -a "x$enable_debug" != "xno"; then
  ELASTIC_DEBUG_FLAGS="$ELASTIC_DEBUG_FLAGS -DEC_DIRTY_MALLOC_ENABLE"
fi

if test "x$enable_profile" = "xyes"; then
  test "$cflags_set" = set || CFLAGS="$CFLAGS -pg"
fi

if test "x$enable_bprofile" = "xyes"; then
  test "$cflags_set" = set || CFLAGS="$CFLAGS -g"
  AC_MODULE_BMON
  PROFILEOBJ="$BMON"
else
  PROFILEOBJ=""
fi

if test "x$MINGW32" = "xyes"; then
  test "$cflags_set" = set || CFLAGS="$CFLAGS -fnative-struct"
fi

if test "x$CYGWIN" = "xyes"; then
  test "$cflags_set" = set || CFLAGS="$CFLAGS -DCYGWIN"
fi

if test "x$MINGW32" = "xyes"; then
  test "$cflags_set" = set || CFLAGS="$CFLAGS -DMINGW32"
fi

if test "x$enable_pentium" = "xgcc"; then
  test "$cflags_set" = set || CFLAGS="$CFLAGS -O3 -m486 -malign-jumps=2 -malign-loops=2 -malign-functions=2"
elif test "x$enable_pentium" = "xegcs"; then
  test "$cflags_set" = set || CFLAGS="$CFLAGS -O6 -mcpu=pentium -march=pentium -mpentium -malign-jumps=2 -malign-loops=2 -malign-functions=2"
fi

test "$cflags_set" = set || CFLAGS="$CFLAGS $ELASTIC_DEBUG_FLAGS"

CORE_CFLAGS="$CFLAGS -DELASTIC_EXPORTS -DELASTIC_CORE"
MODULE_CFLAGS="$CFLAGS"

dnl Checks for programs.
dnl (damn, we have to call AC_PROG_CC before AM_PROG_LIBTOOL, before)
dnl AC_PROG_CC
AC_PROG_CPP
AM_PROG_LEX
AC_PROG_YACC
AC_PROG_INSTALL
AC_PROG_MAKE_SET
dnl AC_PROG_RANLIB
dnl AC_PROG_SDF

# libtool option to control which symbols are exported
# right now, symbols starting with _ are not exported
LIBTOOL_EXPORT_OPTIONS='-export-symbols-regex "^[[^_]].*"'
AC_SUBST(LIBTOOL_EXPORT_OPTIONS)

dnl Check if SDF is present, but don't require it
AC_SUBST(SDF)
AC_CHECK_PROG(SDF, sdf, sdf)
AC_SUBST(SDFFLAGS)
SDFFLAGS='-v -I ${top_srcdir}/doc'
AM_CONDITIONAL(SDF, test x$SDF = xsdf)

dnl Check for perl
AC_CHECK_PROGS(PERL, perl5 perl)

AC_DEFUN(AC_CHECK_LIB_EFENCE,
[ if test "x$enable_memdebug" = "xyes" -a "x$enable_debug" != "xno"; then \
	AC_CHECK_LIB(efence, malloc)
  fi
])

dnl Set defaults if under win32
if test "x$MINGW32" = "xyes" -o "x$CYGWIN" = "xyes" ; then
	ac_cv_exeext=${ac_cv_exeext=.exe}
	ac_cv_prog_cc_cross=${ac_cv_prog_cc_cross=yes}
	ac_cv_prog_cc_g=${ac_cv_prog_cc_g=yes}
	ac_cv_prog_cc_works=${ac_cv_prog_cc_works=yes}
	ac_cv_prog_gcc=${ac_cv_prog_gcc=yes}
	ac_cv_prog_gnu_ld=${ac_cv_prog_gnu_ld=yes}
	ac_cv_prog_make_make_set=${ac_cv_prog_make_make_set=yes}

	ac_cv_c_bigendian=${ac_cv_c_bigendian=no}
	ac_cv_func_setpgrp_void=${ac_cv_func_setpgrp_void=yes}

	ac_cv_sizeof_char=${ac_cv_sizeof_char=1}
	ac_cv_sizeof_double=${ac_cv_sizeof_double=8}
	ac_cv_sizeof_float=${ac_cv_sizeof_float=4}
	ac_cv_sizeof_int=${ac_cv_sizeof_int=4}
	ac_cv_sizeof_long=${ac_cv_sizeof_long=4}
	ac_cv_sizeof_short=${ac_cv_sizeof_short=2}
	ac_cv_sizeof_unsigned_char=${ac_cv_sizeof_unsigned_char=1}
	ac_cv_sizeof_void_p=${ac_cv_sizeof_void_p=4}
fi

dnl Checks for libraries.
AC_CHECK_LIB(m, sin)
dnl AC_CHECK_LIB(nsl, gethostbyname)
dnl AC_CHECK_LIB(socket, connect)
dnl AC_CHECK_FUNC(inet_aton,,[AC_CHECK_LIB(resolv,inet_aton,RES_LIBS="-lresolv")])
AC_CHECK_LIB(dl, dlopen)
dnl AC_CHECK_LIB(readline, readline)
dnl AC_CHECK_LIB(fl, yywrap)
AC_CHECK_LIB_EFENCE

dnl Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS(fcntl.h limits.h values.h malloc.h string.h strings.h stdarg.h varargs.h sys/file.h sys/types.h sys/stat.h sys/wait.h sys/ioctl.h sys/time.h sys/times.h syslog.h unistd.h signal.h dirent.h errno.h netinet/in.h)

dnl Checks for typedefs, structures, and compiler characteristics.
if test "x$MINGW32" = "xyes" -o "x$CYGWIN" = "xyes" ; then
	ac_cv_c_bigendian=no
elif test "x$cross_compiling" = "xyes" ; then
	ac_cv_c_bigendian=unknown
else
	AC_C_BIGENDIAN
fi
AC_C_CONST
AC_C_INLINE
AC_TYPE_MODE_T
AC_TYPE_PID_T
AC_TYPE_UID_T
AC_TYPE_SIZE_T
AC_HEADER_TIME
AC_CHECK_SIZEOF(unsigned char, 1)
AC_CHECK_SIZEOF(char, 1)
AC_CHECK_SIZEOF(short, 2)
AC_CHECK_SIZEOF(int, 4)
AC_CHECK_SIZEOF(long, 4)
AC_CHECK_SIZEOF(void *, 4)
AC_CHECK_SIZEOF(float, 4)
AC_CHECK_SIZEOF(double, 8)

dnl Use new (2.53) AC_CHECK_TYPE / AC_CHECK_TYPES semantic
AC_CHECK_TYPES([quad_t, u_quad_t])
dnl ELASTIC_CHECK_TYPE(quad_t, , long, HAVE_QUAD_T)
dnl ELASTIC_CHECK_TYPE(u_quad_t, , unsigned long, HAVE_U_QUAD_T)
AC_CHECK_TYPES([ssize_t, off_t, off64_t, fpos_t, fpos64_t])

dnl Checks for library functions.
AC_FUNC_ALLOCA
AC_FUNC_MEMCMP
AC_FUNC_SETPGRP
AC_TYPE_SIGNAL
AC_FUNC_VPRINTF
AC_CHECK_FUNCS(strcasecmp index rindex strchr strrchr)
AC_CHECK_FUNCS(strtod strtol strtoul)
AC_CHECK_FUNCS(getenv setenv unsetenv putenv)
AC_CHECK_FUNCS(getcwd select socket strerror)
AC_CHECK_FUNCS(isinf isnan)
AC_CHECK_FUNCS(getopt)
AC_CHECK_FUNCS(fseek ftell rewind fgetpos fsetpos fseeko ftello fgetpos64 fsetpos64 fseeko64 ftello64)
dnl POSIX functions
AC_CHECK_FUNCS(getcwd mkdir rmdir chdir link unlink rename stat fstat lstat)
AC_CHECK_FUNCS(chmod chown utime)
AC_CHECK_FUNCS(opendir readdir closedir rewinddir seekdir telldir)
AC_CHECK_FUNCS(chmod chown utime)
AC_CHECK_FUNCS(access open creat close read write fcntl fstat lseek lseek64 dup dup2)
AC_CHECK_FUNCS(pipe mkfifo umask fdopen fileno)
AC_CHECK_FUNCS(fork execl execle execlp execv execve execvp wait waitpid _exit)
AC_CHECK_FUNCS(kill sleep pause alarm setuid setgid)
AC_CHECK_FUNCS(getpid getppid getlogin getuid geteuid cuserid getgid getegid)
AC_CHECK_FUNCS(popen pclose)

ELASTIC_VA_COPY

dnl Macros used by PCRE
AC_SUBST(UTF8)
AC_SUBST(NEWLINE)
if test "x$MINGW32" = "xyes" -o "x$CYGWIN" = "xyes" ; then
  UTF8=-DSUPPORT_UTF8
  NEWLINE=-DNEWLINE=10
else
  UTF8=-DSUPPORT_UTF8
  NEWLINE=-DNEWLINE=13
fi

dnl Gather info about shared linking
dnl Borrowed from SWIG1.1p5, that says:
dnl This borrowed from the Python configuration file

AC_SUBST(SO)
AC_SUBST(LDSHARED)
AC_SUBST(CCSHARED)
AC_SUBST(LINKFORSHARED)
# SO is the extension of shared libraries `(including the dot!)
# -- usually .so, .sl on HP-UX
AC_MSG_CHECKING(SO)
if test -z "$SO"
then
	case $ac_sys_system in
	hp*|HP*) SO=.sl;;
	NeXT|next) SO=.a;; # no shared libs on NeXT 3.3 and less
	*)	SO=.so;;
	esac

	case $ac_cv_target_alias in
	i386-mingw32msvc*) SO=.dll;;
	*cygwin*) SO=.dll;;
	esac
fi
AC_MSG_RESULT($SO)
# LDSHARED is the ld *command* used to create shared library
# -- "ld" on SunOS 4.x.x, "ld -G" on SunOS 5.x, "ld -shared" on IRIX 5
AC_MSG_CHECKING(LDSHARED)
if test -z "$LDSHARED"
then
	case $ac_sys_system/$ac_sys_release in
	#AIX*) LDSHARED="ld_so_aix";;
	AIX*) LDSHARED="ld -G -brtl -bexpall -bnoentry";;
	IRIX*) LDSHARED="ld -shared";;
	SunOS/4*) LDSHARED="ld";;
	SunOS/5*) LDSHARED="ld -G";;
	hp*|HP*) LDSHARED="ld -b";;
	OSF*) LDSHARED="ld -shared -expect_unresolved \"*\"";;
	DYNIX/ptx*) LDSHARED="ld -G";;
	Linux*) LDSHARED="gcc -shared";;
	FreeBSD*) LDSHARED="ld -Bshareable";;
	NeXT|next/3*) LDSHARED="ld -u libsys_s";;
	*)	LDSHARED="ld";;
	esac

	case $ac_cv_target_alias in
	linux*) LDSHARED="gcc -shared";;
	i386-mingw32msvc*) LDSHARED="i386-mingw32msvc-ld";;
	*cygwin*) LDSHARED="gcc -shared";;
	esac
fi
AC_MSG_RESULT($LDSHARED)
# CCSHARED are the C *flags* used to create objects to go into a shared
# library -- this is only needed for a few systems
AC_MSG_CHECKING(CCSHARED)
if test -z "$CCSHARED"
then
	case $ac_sys_system in
	hp*|HP*) if test "$GCC" = yes;
		 then CCSHARED="-fpic";
		 else CCSHARED="+z";
		 fi;;
	Linux*) CCSHARED="-fPIC";;
	FreeBSD*) CCSHARED="-fpic";;
	esac

	case $ac_cv_target_alias in
	linux*) CCSHARED="-fPIC";;
	i386-mingw32msvc*) CCSHARED="";;
	*cygwin*) CCSHARED="-DPIC";;
	esac
fi
AC_MSG_RESULT($CCSHARED)

# LINKFORSHARED are the flags passed to the $(CC) command that links
# the a few executables -- this is only needed for a few systems

AC_MSG_CHECKING(LINKFORSHARED)
if test -z "$LINKFORSHARED"
then
	case $ac_sys_system/$ac_sys_release in
	AIX*)	LINKFORSHARED='-Wl,-bE:$(srcdir)/elastic.exp -lld';;
	hp*|HP*)
	    LINKFORSHARED="-Wl,-E -Wl,+s -Wl,+b\$(BINLIBDEST)/lib-dynload";;
	Linux*) LINKFORSHARED="-Xlinker -export-dynamic";;
	next/*) LINKFORSHARED="-u libsys_s";;
	SCO_SV*) LINKFORSHARED="-Bdynamic -dy -Wl,-Bexport";;
	IRIX*/6*) LINKFORSHARED="-all";;
	esac

	case $ac_cv_target_alias in
	linux*) LINKFORSHARED="-Xlinker -export-dynamic";;
	i386-mingw32msvc*) LINKFORSHARED="";;
	esac
fi
AC_MSG_RESULT($LINKFORSHARED)

dnl makemodule - dynamically loadable module generation
AC_SUBST(MKMODULE)
AC_SUBST(MKMODULEFLAGS)
AC_SUBST(MKMODULELIBS)
MKMODULE='${top_srcdir}/makemodule'
dnl MKMODULEFLAGS='-c ${top_builddir}/src/elastic-config --elastic-import=${top_builddir}/src/libelastic.la'
dnl MKMODULEFLAGS='-c ${top_builddir}/src/elastic-config --elastic-import=${top_builddir}/src/libelastic.a'
MKMODULEFLAGS='-c ${top_builddir}/src/elastic-config --elastic-import=${top_builddir}/src/.libs/libelastic-${EC_API_VERSION}.a'
MKMODULELIBS=''

dnl Get platform alignment restrictions
dnl
dnl (MIPS needs alignment, but what are the values ?)
dnl (What is a sensible default value ?)
AC_SUBST(PLATFORM_ALIGNMENT)
AC_MSG_CHECKING(Platform alignment)
if test -z "$PLATFORM_ALIGNMENT"
then
  case $host_cpu in
  sparc*)
    PLATFORM_ALIGNMENT="16";;
  mips*)
    PLATFORM_ALIGNMENT="16";;
  *)
    PLATFORM_ALIGNMENT=${PLATFORM_ALIGNMENT:=8};;
  esac
fi
AC_MSG_RESULT($PLATFORM_ALIGNMENT)

dnl Emit optional features variables
AC_SUBST(ELASTIC_DEBUG_FLAGS)
AC_SUBST(PROFILEOBJ)

dnl AC_OUTPUT(Makefile src/cnf.h src/elastic-config src/Makefile src/arithmetic/Makefile src/modules/Makefile src/modules-dynamic/Makefile src/modules-dynamic/re/Makefile src/modules-dynamic/re/pcre/Makefile src/types/Makefile src/dl/Makefile src/unix/Makefile src/win32/Makefile regress/Makefile doc/Makefile aclocal/Makefile doc/INSTALL.sdf)

dnl AC_CONFIG_FILES(Makefile src/cnf.h src/elastic-config src/Makefile src/arithmetic/Makefile src/modules/Makefile src/modules-dynamic/Makefile src/modules-dynamic/re/Makefile src/modules-dynamic/re/pcre/Makefile src/types/Makefile src/dl/Makefile src/unix/Makefile src/win32/Makefile modules/Makefile regress/Makefile doc/Makefile aclocal/Makefile doc/INSTALL.sdf win32/elastic.nsi)
AC_CONFIG_FILES(Makefile src/cnf.h src/elastic-config src/Makefile src/arithmetic/Makefile src/modules/Makefile src/modules-dynamic/Makefile src/modules-dynamic/re/Makefile src/types/Makefile src/dl/Makefile src/unix/Makefile src/win32/Makefile modules/Makefile regress/Makefile doc/Makefile aclocal/Makefile doc/INSTALL.sdf win32/elastic.nsi)
AC_CONFIG_COMMANDS([win32-cnf.h], [cp -f src/cnf.h win32/cnf.h])
AC_CONFIG_COMMANDS([win32-nsis], [
cp -f README win32/README.txt
cp LICENSE win32/LICENSE.txt
todos win32/README.txt
todos win32/LICENSE.txt
])
AC_OUTPUT

echo
echo "Build options:"
echo "   developer mode   : ${enable_devel}"
echo "   debug mode       : ${enable_debug}"
echo "   memory debug mode: ${enable_memdebug}"
echo "   profiling        : ${enable_profile}"
echo
echo "General configuration:"
echo "   dynamic module loading: ${DLBACKEND}"
echo
echo "Configured modules:"
echo "   posix (POSIX Std 1003.1)  - ${ecmodule_posix}"
echo "   errno                     - ${ecmodule_errno}"
echo
